{#
/**
 * @file
 * Theme override for a 'select' #type element.
 *
 * @see ./core/themes/stable/templates/form/select.html.twig
 */
#}
{% set extra_classes = ['ecl-select'] %}
{% if attributes.hasClass('error') %}
  {% set extra_classes = extra_classes|merge(['ecl-select--invalid']) %}
{% endif %}

{# Set default wrapper classes. #}
{# This also allows overriding templates to take control of classes like width modifiers. #}
{% set wrapper_classes = wrapper_classes|default([
  'ecl-select__container',
  'ecl-select__container--m',
]) %}

{% if attributes.multiple is not empty %}
  {% set attributes = attributes.setAttribute('data-ecl-auto-init', 'Select') %}
  {% set attributes = attributes.setAttribute('multiple', '') %}
  {% set attributes = attributes.setAttribute('data-ecl-select-multiple', 'true') %}
  {% set attributes = attributes.setAttribute('data-ecl-select-default', 'Select'|t) %}
  {% set attributes = attributes.setAttribute('data-ecl-select-search', 'Search'|t) %}
  {% set attributes = attributes.setAttribute('data-ecl-select-all', 'Select all'|t) %}
{% endif %}

{% set wrapper_attributes = create_attribute({'class': wrapper_classes}) %}

{% if disabled %}
  {% set wrapper_attributes = wrapper_attributes.addClass('ecl-select__container--disabled') %}
{% endif %}

{% apply spaceless %}
  <div{{ wrapper_attributes }}>
    <select{{ attributes.addClass(extra_classes) }}>
      {% for option in options %}
        {% if option.type == 'optgroup' %}
          <optgroup label="{{ option.label }}">
            {% for sub_option in option.options %}
              <option value="{{ sub_option.value }}"{{ sub_option.selected ? ' selected="selected"' }}>{{ sub_option.label }}</option>
            {% endfor %}
          </optgroup>
        {% elseif option.type == 'option' %}
          <option value="{{ option.value }}"{{ option.selected ? ' selected="selected"' }}>{{ option.label }}</option>
        {% endif %}
      {% endfor %}
    </select>
    <div class="ecl-select__icon">
      {% include '@ecl-twig/icon' with {
        icon: {
          path: ecl_icon_path,
          name: "corner-arrow",
          size: "s",
          transform: "rotate-180"
        },
        extra_classes: "ecl-select__icon-shape"
      } only %}
    </div>
  </div>
{% endapply %}
