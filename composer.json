{
    "name": "openeuropa/oe_theme",
    "description": "OpenEuropa base theme.",
    "type": "drupal-theme",
    "license": "EUPL-1.2",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require": {
        "php": ">=8.0",
        "cweagans/composer-patches": "~1.4",
        "drupal/core": "^9.4",
        "drupal/smart_trim": "^2.0",
        "drupal/twig_field_value": "^2.0",
        "drupal/ui_patterns": "^1.5",
        "openeuropa/ecl-twig-loader": "^3.1",
        "openeuropa/oe_time_caching": "^1.4"
    },
    "require-dev": {
        "behat/behat": "^3.10",
        "behat/mink-selenium2-driver": "^1.5",
        "composer/installers": "~1.5",
        "doctrine/collections": "^1.8",
        "drupal/address": "~1.11",
        "drupal/composite_reference": "^2.1",
        "drupal/config_devel": "~1.2",
        "drupal/core-composer-scaffold": "^9.4",
        "drupal/core-utility": "^9.4",
        "drupal/ctools": "^3.7",
        "drupal/datetime_range_timezone": "~1.0.0-alpha2",
        "drupal/datetime_testing": "^1.0",
        "drupal/description_list_field": "^1.0",
        "drupal/drupal-driver": "^2.1.1",
        "drupal/drupal-extension": "dev-master as 4.0",
        "drupal/emr": "~1.0-beta9",
        "drupal/entity_browser": "^2.5",
        "drupal/entity_reference_revisions": "~1.3",
        "drupal/extra_field": "^2.1",
        "drupal/field_group": "~3.2",
        "drupal/inline_entity_form": "~1.0-rc15",
        "drupal/json_field": "^1.2",
        "drupal/renderviz": "^1.0@alpha",
        "drupal/styleguide": "~1.0@beta",
        "drupal/token": "^1.10",
        "drupal/typed_link": "^2.0",
        "drush/drush": "~11.1",
        "friends-of-behat/service-container-extension": "^1.0",
        "guzzlehttp/guzzle": "^7.0",
        "instaclick/php-webdriver": "^1.4.7",
        "masterminds/html5": "^2.7.6",
        "mikey179/vfsstream": "^1.6.10",
        "nikic/php-parser": "^4.12.0",
        "openeuropa/behat-transformation-context": "^0.2",
        "openeuropa/code-review": "^2.0.0-alpha6",
        "openeuropa/oe_contact_forms": "^1.10",
        "openeuropa/oe_content": "^3.0.0-alpha9",
        "openeuropa/oe_corporate_blocks": "^4.11",
        "openeuropa/oe_corporate_countries": "^2.0.0-alpha6",
        "openeuropa/oe_media": "^1.22",
        "openeuropa/oe_multilingual": "dev-master",
        "openeuropa/oe_paragraphs": "^1.17",
        "openeuropa/oe_search": "^1.9",
        "openeuropa/oe_webtools": "^1.21",
        "openeuropa/rdf_skos": "^1.0.0-alpha9",
        "openeuropa/task-runner-drupal-project-symlink": "^1.0.0-beta6",
        "phpspec/prophecy-phpunit": "^2",
        "symfony/browser-kit": "^4.4.37",
        "symfony/console": "^4.4.30",
        "symfony/css-selector": "^4.4.24",
        "symfony/dom-crawler": "^4.4.44",
        "symfony/finder": "^4.4.30",
        "symfony/http-foundation": "^4.4.30",
        "symfony/phpunit-bridge": "^6.0",
        "symfony/process": "^4.4.30",
        "symfony/routing": "^4.4.30",
        "symfony/validator": "^4.4.30",
        "symfony/yaml": "^4.4.29"
    },
    "scripts": {
        "post-install-cmd": "./vendor/bin/run drupal:site-setup",
        "post-update-cmd": "./vendor/bin/run drupal:site-setup"
    },
    "autoload": {
        "psr-4": {
            "Drupal\\oe_theme\\": "./src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Drupal\\Tests\\oe_theme\\": "./tests/src/",
            "Drupal\\Tests\\oe_content\\": "./build/modules/contrib/oe_content/tests/src/",
            "Drupal\\Tests\\oe_media\\": "./build/modules/contrib/oe_media/tests/src/"
        }
    },
    "repositories": {
        "drupal": {
            "type": "composer",
            "url": "https://packages.drupal.org/8"
        },
        "media_avportal": {
            "type": "git",
            "url": "https://github.com/openeuropa/media_avportal"
        }
    },
    "extra": {
        "composer-exit-on-patch-failure": true,
        "enable-patching": true,
        "installer-paths": {
            "build/core": ["type:drupal-core"],
            "build/profiles/contrib/{$name}": ["type:drupal-profile"],
            "build/modules/contrib/{$name}": ["type:drupal-module"],
            "build/themes/contrib/{$name}": ["type:drupal-theme"]
        },
        "patches": {
            "drupal/drupal-driver": {
                "allow-date-only-date-fields": "https://patch-diff.githubusercontent.com/raw/jhedstrom/DrupalDriver/pull/235.patch"
            },
            "drupal/address": {
                "https://www.drupal.org/project/address/issues/3144823": "https://www.drupal.org/files/issues/2020-11-05/3144823-6.patch"
            },
            "drupal/entity_reference_revisions": {
                "https://www.drupal.org/project/entity_reference_revisions/issues/2937835": "https://www.drupal.org/files/issues/2021-03-26/entity_reference_revisions-field_formatter_label-2937835-36.patch"
            }
        },
        "drupal-scaffold": {
            "locations": {
                "web-root": "./build"
            }
        },
        "_readme": [
            "Explicit minimum version requirement of drupal/ctools module due to D9.4 compatability.",
            "Explicit minimum version requirement of behat library due to PHP compatibility.",
            "Explicit minimum version requirement of symfony packages due to lower versions missing return type on various methods being incompatible with PHP 8.1 parent methods.",
            "Use master branch of drupal/drupal-extension to replace fabpot/goutte with behat/mink-browserkit-driver and the rest of the behat required dependencies.",
            "Explicit minimum version requirement of symfony/phpunit-bridge to replace drupal/core-dev testing classes and traits.",
            "Explicit minimum version requirement of mikey179/vfsstream due to lower versions missing return type on vfsStreamDirectory::getIterator() method.",
            "Explicit minimum version requirement of masterminds/html5 due to lower versions passing NULL parameters instead of string when calling DOMImplementation::createDocument() method.",
            "Explicit minimum version requirement of guzzlehttp/guzzle due to lower versions missing return type on CookieJar::getIterator() and CookieJar::count() methods.",
            "Explicit minimum version requirement of doctrine/collections due to lower versions missing return type on ArrayCollection::count() methods.",
            "Explicit requirement of token module due to lower versions declaring optional parameters before the require one on token_tokens() function."
        ]
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/installers": true,
            "drupal/core-composer-scaffold": true,
            "cweagans/composer-patches": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "phpro/grumphp": true
        }
    }
}
