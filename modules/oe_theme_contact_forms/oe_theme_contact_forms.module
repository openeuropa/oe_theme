<?php

/**
 * @file
 * Module file used for theming the corporate contact forms.
 */

declare(strict_types = 1);

use Drupal\contact\Entity\ContactForm;
use Drupal\contact\MessageInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;

/**
 * Implements hook_form_FORM_ID_alter() for contact_message_form().
 */
function oe_theme_contact_forms_form_contact_message_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\Core\Entity\ContentEntityForm $form_object */
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\contact\MessageInterface $contact_message */
  $contact_message = $form_object->getEntity();
  /** @var \Drupal\contact\Entity\ContactForm $contact_form */
  $contact_form = ContactForm::load($contact_message->bundle());

  $is_corporate_form = (boolean) $contact_form->getThirdPartySetting('oe_contact_forms', 'is_corporate_form', FALSE);
  if (!$is_corporate_form) {
    // We only care about the corporate contact forms.
    return;
  }

  // Display header as ecl paragraph.
  if (isset($form['header'])) {
    $form['header'] = [
      '#type' => 'inline_template',
      '#template' => '<p class="ecl-u-type-paragraph">{{ header }}</p>',
      '#context' => [
        'header' => $form['header'],
      ],
    ];
  }

  // Add ecl link classes to the privacy link.
  $privacy_policy = $contact_form->getThirdPartySetting('oe_contact_forms', 'privacy_policy');
  $privacy_link = Link::fromTextAndUrl(t('personal data protection terms'), Url::fromUri($privacy_policy, [
    'absolute' => TRUE,
    'attributes' => [
      'target' => '_blank',
      'class' => [
        'ecl-u-ml-2xs',
        'ecl-u-mr-2xs',
        'ecl-link',
        'ecl-link--default',
      ],
    ],
  ]));

  $form['privacy_policy']['#title'] = t('I have read and agree with the @link', [
    '@link' => $privacy_link->toString(),
  ]);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oe_theme_contact_forms_preprocess_status_messages(&$variables) {
  if (!isset($variables['message_list']['status'])) {
    return;
  }

  foreach ($variables['message_list']['status'] as $key => $value) {
    // Target contact_messages which are being rendered in the status message.
    if (
      !is_array($value) ||
      !isset($value['#contact_message']) ||
      !$value['#contact_message'] instanceof MessageInterface
    ) {
      continue;
    }

    /** @var \Drupal\contact\MessageInterface $contact_message */
    $contact_message = $value['#contact_message'];
    /** @var \Drupal\contact\Entity\ContactForm $contact_form */
    $contact_form = ContactForm::load($contact_message->bundle());
    $is_corporate_form = (boolean) $contact_form->getThirdPartySetting('oe_contact_forms', 'is_corporate_form', FALSE);

    // We work only with corporate forms from here.
    if (!$is_corporate_form) {
      continue;
    }

    $optional_fields = $contact_form->getThirdPartySetting('oe_contact_forms', 'optional_fields', []);
    $items = [];
    $fields = [
      'name',
      'mail',
      'subject',
      'message',
      'oe_topic',
    ];

    if (in_array('oe_country_residence', $optional_fields)) {
      $fields[] = 'oe_country_residence';
    }

    if (in_array('oe_telephone', $optional_fields)) {
      $fields[] = 'oe_telephone';
    }

    // Build the label body pairs for the field_list pattern.
    foreach ($fields as $field_name) {
      /** @var \Drupal\Core\Field\FieldItemList $field */
      $field = $contact_message->get($field_name);
      if ($field->isEmpty() || !$field->access()) {
        continue;
      }

      $display_settings = ['label' => 'hidden'];
      if ($field->getFieldDefinition()->getType() == 'skos_concept_entity_reference') {
        $display_settings += [
          'settings' => [
            'link' => FALSE,
          ],
        ];
      }

      $items[] = [
        'label' => $field->getFieldDefinition()->getLabel(),
        'body' => $field->view($display_settings),
      ];
    }

    $variables['message_list']['status'][$key] = [
      '#type' => 'pattern',
      '#id' => 'field_list',
      '#variant' => 'horizontal',
      '#fields' => [
        'items' => $items,
      ],
    ];
  }
}
