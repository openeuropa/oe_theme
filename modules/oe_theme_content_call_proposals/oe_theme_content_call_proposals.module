<?php

/**
 * @file
 * Module file is used for theming the Call for proposals content type.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_theme().
 */
function oe_theme_content_call_proposals_theme() {
  return [
    'oe_theme_content_call_proposals_publication_info' => [
      'variables' => [
        'date' => '',
        'link' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_call_proposals_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Run only for "Call for proposals" content type.
  if ($entity->bundle() !== 'oe_call_proposals') {
    return;
  }

  // Field labels are different in frontend and backend.
  // Here we override them, in full and teaser view mode.
  $label_overrides = [];
  if (in_array($build['#view_mode'], ['full', 'teaser'])
    && ($entity->get('oe_call_proposals_deadline')->count() > 1)) {
    $label_overrides['oe_call_proposals_deadline'] = t('Deadline dates');
  }

  if ($build['#view_mode'] === 'full') {
    $label_overrides += [
      'oe_departments' => t('Departments'),
      'oe_call_proposals_grants' => t('Results'),
    ];

    if ($entity->get('oe_departments')->count() === 1) {
      $label_overrides['oe_departments'] = t('Department');
    }
  }

  foreach ($label_overrides as $name => $label_override) {
    if (!$entity->get($name)->isEmpty() && isset($build[$name]['#title'])) {
      $build[$name]['#title'] = $label_override;
    }
  }
}

/**
 * Implements template_preprocess_node() for the CFP node type.
 */
function oe_theme_content_call_proposals_preprocess_node__oe_call_proposals__teaser(array &$variables): void {
  if (!isset($variables['elements']['extra_field_oe_call_proposals_label_status'])) {
    return;
  }
  $status = $variables['elements']['extra_field_oe_call_proposals_label_status'][0];
  $variant = _oe_theme_helper_prepare_status_variant($status['#name']);
  if (empty($variant)) {
    return;
  }
  $variables['badges'][] = [
    'label' => $status['#label']->render(),
    'variant' => $variant,
  ];
}
