<?php

/**
 * @file
 * Module file used for theming the News content type.
 */

declare(strict_types = 1);

use Drupal\Core\Cache\CacheableMetadata;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\media\MediaInterface;

/**
 * Implements template_preprocess_node() for the News node type.
 */
function oe_theme_content_news_preprocess_node__oe_news(&$variables) {
  if ($variables['view_mode'] !== 'full') {
    return;
  }

  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  $media = $node->get('oe_news_featured_media')->entity;
  if ($media instanceof MediaInterface) {
    $cacheability = CacheableMetadata::createFromRenderArray($variables);
    $cacheability->addCacheableDependency($media);

    // Run access checks on the media entity.
    $access = $media->access('view', $variables['user'], TRUE);
    $cacheability->addCacheableDependency($access);
    $cacheability->applyTo($variables);
    if (!$access->isAllowed()) {
      return;
    }

    $builder = \Drupal::entityTypeManager()->getViewBuilder('media');
    $variables['content']['featured_image'] = $builder->view($media, 'oe_theme_main_content');
    // Show the image always at the top.
    $variables['content']['featured_image']['#weight'] = -100;
    $variables['content']['featured_image']['#attributes']['class'][] = 'ecl-u-type-paragraph';
    $variables['content']['featured_image']['#attributes']['class'][] = 'ecl-u-mb-l';
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_news_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() !== 'oe_news') {
    return;
  }

  if ($build['#view_mode'] === 'full') {
    // Rename field labels based on number of items.
    $plural_label_overrides = [
      'oe_author' => t('Authors'),
      'oe_departments' => t('Departments'),
    ];

    $singular_label_overrides = [
      'oe_departments' => t('Department'),
    ];

    foreach ($plural_label_overrides as $name => $label_override) {
      if (!$entity->get($name)->isEmpty() && $entity->get($name)->count() > 1 && isset($build[$name]['#title'])) {
        $build[$name]['#title'] = $label_override;
      }
      // Override singular labels if defined.
      elseif (!$entity->get($name)->isEmpty() && $entity->get($name)->count() == 1 && isset($build[$name]['#title']) && isset($singular_label_overrides[$name])) {
        $build[$name]['#title'] = $singular_label_overrides[$name];
      }
    }
  }
}
